{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/health/health.module.ts","webpack:///./src/app/health/health.controller.ts","webpack:///./src/app/prisma/prisma.module.ts","webpack:///./src/app/prisma/prisma.service.ts","webpack:///external commonjs \"@prisma/client\"","webpack:///./src/app/s3/s3.module.ts","webpack:///./src/app/s3/s3.service.ts","webpack:///external commonjs \"@aws-sdk/client-s3\"","webpack:///external commonjs \"@aws-sdk/s3-request-presigner\"","webpack:///./src/app/s3/s3.controller.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { HealthModule } from './health/health.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { S3Module } from './s3/s3.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ['.env.local', '.env'],\n    }),\n    PrismaModule,\n    HealthModule,\n    S3Module,\n  ],\n  controllers: [AppController],\n})\nexport class AppModule {}","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/config\");","import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  getData() {\n    return {\n      message: 'Welcome to Audibook Studio API',\n      version: '0.1.0',\n      docs: '/api/health for health check',\n    };\n  }\n}","import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\n\n@Module({\n  controllers: [HealthController],\n})\nexport class HealthModule {}","import { Controller, Get } from '@nestjs/common';\n\n@Controller('health')\nexport class HealthController {\n  @Get()\n  check() {\n    return {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      environment: process.env.NODE_ENV || 'development',\n      service: 'audibook-api',\n    };\n  }\n}","import { Module, Global } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}","import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor() {\n    super({\n      log: ['query', 'info', 'warn', 'error'],\n    });\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}","module.exports = require(\"@prisma/client\");","import { Module } from '@nestjs/common';\nimport { S3Service } from './s3.service';\nimport { S3Controller } from './s3.controller';\n\n@Module({\n  controllers: [S3Controller],\n  providers: [S3Service],\n  exports: [S3Service],\n})\nexport class S3Module {}","import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  S3Client,\n  PutObjectCommand,\n  CreateBucketCommand,\n  HeadBucketCommand,\n} from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\n\n@Injectable()\nexport class S3Service {\n  private readonly logger = new Logger(S3Service.name);\n  private readonly s3Client: S3Client;\n  private readonly bucketName: string;\n\n  constructor(private configService: ConfigService) {\n    const endpoint = this.configService.get('S3_ENDPOINT');\n    \n    this.s3Client = new S3Client({\n      region: this.configService.get('AWS_REGION', 'us-east-1'),\n      credentials: {\n        accessKeyId: this.configService.get('AWS_ACCESS_KEY_ID'),\n        secretAccessKey: this.configService.get('AWS_SECRET_ACCESS_KEY'),\n      },\n      ...(endpoint && {\n        endpoint,\n        forcePathStyle: true, // Required for MinIO\n      }),\n    });\n\n    this.bucketName = this.configService.get('S3_BUCKET_NAME', 'audibook-storage');\n    this.initializeBucket();\n  }\n\n  private async initializeBucket() {\n    try {\n      await this.s3Client.send(\n        new HeadBucketCommand({ Bucket: this.bucketName })\n      );\n      this.logger.log(`Bucket ${this.bucketName} exists`);\n    } catch (error) {\n      this.logger.log(`Creating bucket ${this.bucketName}`);\n      try {\n        await this.s3Client.send(\n          new CreateBucketCommand({ Bucket: this.bucketName })\n        );\n        this.logger.log(`Bucket ${this.bucketName} created`);\n      } catch (createError) {\n        this.logger.error('Failed to create bucket', createError);\n      }\n    }\n  }\n\n  async getPresignedUploadUrl(key: string, contentType: string) {\n    const command = new PutObjectCommand({\n      Bucket: this.bucketName,\n      Key: key,\n      ContentType: contentType,\n    });\n\n    const url = await getSignedUrl(this.s3Client, command, {\n      expiresIn: 3600, // 1 hour\n    });\n\n    return { url, key };\n  }\n}","module.exports = require(\"@aws-sdk/client-s3\");","module.exports = require(\"@aws-sdk/s3-request-presigner\");","import { Controller, Post, Body } from '@nestjs/common';\nimport { S3Service } from './s3.service';\n\n@Controller('s3')\nexport class S3Controller {\n  constructor(private s3Service: S3Service) {}\n\n  @Post('presigned-upload')\n  async getPresignedUploadUrl(\n    @Body() body: { filename: string; contentType: string }\n  ) {\n    const { filename, contentType } = body;\n    const key = `raw/${Date.now()}-${filename}`;\n    \n    const result = await this.s3Service.getPresignedUploadUrl(key, contentType);\n    \n    return {\n      uploadUrl: result.url,\n      key: result.key,\n    };\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  \n  // Enable CORS for the Next.js app\n  app.enableCors({\n    origin: 'http://localhost:3000',\n    credentials: true,\n  });\n\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n\n  const port = process.env.PORT || 3333;\n  \n  await app.listen(port);\n  \n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n  Logger.log(\n    `🏥 Health check available at: http://localhost:${port}/${globalPrefix}/health`\n  );\n}\n\nbootstrap();"],"names":[],"sourceRoot":""}